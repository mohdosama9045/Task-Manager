{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Generic API request function\nconst apiRequest = async (endpoint, options = {}) => {\n  const token = localStorage.getItem('token');\n  const url = `${API_BASE_URL}${endpoint}`;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers\n    },\n    ...options\n  };\n\n  // Add authorization header if token exists\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  if (config.body && typeof config.body === 'object') {\n    config.body = JSON.stringify(config.body);\n  }\n  try {\n    const response = await fetch(url, config);\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(data.message || `HTTP error! status: ${response.status}`);\n    }\n    return data;\n  } catch (error) {\n    console.error('API request failed:', error);\n    throw new Error(error.message || 'Network error. Please check your connection.');\n  }\n};\n\n// Auth API\nexport const authAPI = {\n  register: userData => apiRequest('/auth/register', {\n    method: 'POST',\n    body: userData\n  }),\n  login: credentials => apiRequest('/auth/login', {\n    method: 'POST',\n    body: credentials\n  }),\n  getMe: () => apiRequest('/auth/me'),\n  logout: () => apiRequest('/auth/logout', {\n    method: 'POST'\n  })\n};\n\n// Tasks API\nexport const tasksAPI = {\n  getAll: () => apiRequest('/tasks'),\n  getById: id => apiRequest(`/tasks/${id}`),\n  create: taskData => apiRequest('/tasks', {\n    method: 'POST',\n    body: taskData\n  }),\n  update: (id, updates) => apiRequest(`/tasks/${id}`, {\n    method: 'PUT',\n    body: updates\n  }),\n  delete: id => apiRequest(`/tasks/${id}`, {\n    method: 'DELETE'\n  }),\n  toggle: id => apiRequest(`/tasks/${id}/toggle`, {\n    method: 'PATCH'\n  }),\n  getStatistics: () => apiRequest('/tasks/stats')\n};\nexport default apiRequest;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","apiRequest","endpoint","options","token","localStorage","getItem","url","config","headers","Authorization","body","JSON","stringify","response","fetch","data","json","ok","Error","message","status","error","console","authAPI","register","userData","method","login","credentials","getMe","logout","tasksAPI","getAll","getById","id","create","taskData","update","updates","delete","toggle","getStatistics"],"sources":["C:/Person S/web/Task/FrontEnd/src/services/localStorage.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Generic API request function\r\nconst apiRequest = async (endpoint, options = {}) => {\r\n  const token = localStorage.getItem('token');\r\n  const url = `${API_BASE_URL}${endpoint}`;\r\n  \r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...options.headers\r\n    },\r\n    ...options\r\n  };\r\n\r\n  // Add authorization header if token exists\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n\r\n  if (config.body && typeof config.body === 'object') {\r\n    config.body = JSON.stringify(config.body);\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(url, config);\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new Error(data.message || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('API request failed:', error);\r\n    throw new Error(error.message || 'Network error. Please check your connection.');\r\n  }\r\n};\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  register: (userData) => apiRequest('/auth/register', {\r\n    method: 'POST',\r\n    body: userData\r\n  }),\r\n  login: (credentials) => apiRequest('/auth/login', {\r\n    method: 'POST',\r\n    body: credentials\r\n  }),\r\n  getMe: () => apiRequest('/auth/me'),\r\n  logout: () => apiRequest('/auth/logout', {\r\n    method: 'POST'\r\n  })\r\n};\r\n\r\n// Tasks API\r\nexport const tasksAPI = {\r\n  getAll: () => apiRequest('/tasks'),\r\n  getById: (id) => apiRequest(`/tasks/${id}`),\r\n  create: (taskData) => apiRequest('/tasks', {\r\n    method: 'POST',\r\n    body: taskData\r\n  }),\r\n  update: (id, updates) => apiRequest(`/tasks/${id}`, {\r\n    method: 'PUT',\r\n    body: updates\r\n  }),\r\n  delete: (id) => apiRequest(`/tasks/${id}`, {\r\n    method: 'DELETE'\r\n  }),\r\n  toggle: (id) => apiRequest(`/tasks/${id}/toggle`, {\r\n    method: 'PATCH'\r\n  }),\r\n  getStatistics: () => apiRequest('/tasks/stats')\r\n};\r\n\r\nexport default apiRequest;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}